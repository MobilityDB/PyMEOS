name: Build PyMEOS CFFI

on:
  push:
    branches:
      - build-actions
  create:
    tags:
      - "pymeos-cffi-[0-9]+.[0-9]+.[0-9]+*"

jobs:
  build_sdist:
    name: Build PyMEOS CFFI source distribution
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.8
          cache: "pip"

      - name: Setup pip
        run: |
          python -m pip install --upgrade pip
          python -m pip install build

      - name: Build sdist
        working-directory: pymeos_cffi
        run: |
          python -m build -s
          ls -l dist

      - uses: actions/upload-artifact@v4
        with:
          path: ./pymeos_cffi/dist/pymeos_cffi-*.tar.gz

  build_wheels:
    if: false
    name: Build PyMEOS CFFI for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-13, macos-14 ]
        include:
          - ld_path: "/usr/local/lib"
          - os: macos-14
            ld_path: "/opt/homebrew/lib"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Update brew
        if: matrix.os == 'macos-13'
        # Necessary to avoid issue with macOS runners. See
        # https://github.com/actions/runner-images/issues/4020
        run: |
          brew reinstall python@3.12 || brew link --overwrite python@3.12
          brew reinstall python@3.11 || brew link --overwrite python@3.11
          brew update

      - name: Get dependencies from homebrew (cache)
        uses: tecolicom/actions-use-homebrew-tools@v1
        if: runner.os == 'macOS'
        with:
          tools: cmake libpq proj json-c gsl geos

      - name: Fetch MEOS sources
        if: runner.os == 'macOS'
        run: |
          git clone --depth 1 https://github.com/MobilityDB/MobilityDB

      - name: Install MEOS
        if: runner.os == 'macOS'
        run: |
          mkdir MobilityDB/build
          cd MobilityDB/build
          cmake .. -DMEOS=on
          make -j
          sudo make install

      - name: Setup Python
        uses: actions/setup-python@v5

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.17.0

      - name: Build wheels
        working-directory: pymeos_cffi
        run: |
          export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${{ matrix.ld_path }}
          export DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${{ matrix.ld_path }}
          python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BEFORE_ALL_LINUX: "
          yum -y install https://download.postgresql.org/pub/repos/yum/reporpms/EL-7-x86_64/pgdg-redhat-repo-latest.noarch.rpm
          && yum -y update
          && yum -y install gcc gcc-c++ make cmake postgresql13-devel proj81-devel json-c-devel geos39-devel gsl-devel
          && git clone https://github.com/MobilityDB/MobilityDB
          && mkdir MobilityDB/build
          && cd MobilityDB/build
          && cmake .. -DMEOS=on -DGEOS_INCLUDE_DIR=/usr/geos39/include/ -DGEOS_LIBRARY=/usr/geos39/lib64/libgeos_c.so -DGEOS_CONFIG=/usr/geos39/bin/geos-config -DPROJ_INCLUDE_DIRS=/usr/proj81/include/ -DPROJ_LIBRARIES=/usr/proj81/lib/libproj.so
          && make -j
          && make install
          && export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib
          "
          CIBW_TEST_COMMAND: "python -c \"from pymeos_cffi import meos_initialize, meos_finalize; meos_initialize('UTC'); meos_finalize()\""

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}
          path: ./wheelhouse/*.whl
